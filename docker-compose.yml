version: '3.8'

services:
  habit.api:
    container_name: habit.api
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - habit.db
      - habit.minio
      - habit.rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:5001
    networks:
      - nginx-network
    restart: unless-stopped
    
  habit.db:
    container_name: habit.db
    image: postgres:latest
    environment:
      POSTGRES_DB: habit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - nginx-network
  
  habit.minio:
    container_name: habit.minio
    image: minio/minio:latest
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ofBo7Axzqli4AQssLN5l
      MINIO_SECRET_KEY: 5gMJcLitNIOAyocrp8Y7dapU9b585fFeFbL8wU1n
      MINIO_ADDRESS: :9000
      MINIO_CONSOLE_ADDRESS: :9001
    volumes:
      - ./.containers/minio:/data
    networks:
      - nginx-network
  
  habit.rabbitmq:
    container_name: habit.rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
        RABBITMQ_DEFAULT_USER: esm3threeweb3
        RABBITMQ_DEFAULT_PASS: L9cardrive
    volumes:
      - ./.containers/rabbitmq:/var/lib/rabbitmq
    networks:
      - nginx-network
  
  nginx:
    container_name: habit.nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./.containers/certbot/conf:/etc/letsencrypt
      - ./.containers/certbot/www:/var/www/certbot
    environment:
      - NGINX_HOST=hback.hbcode.kz
    depends_on:
      - habit.api
    networks:
      - nginx-network
    restart: unless-stopped
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./.containers/certbot/conf:/etc/letsencrypt
      - ./.containers/certbot/www:/var/www/certbot
    restart: unless-stopped
    
networks:
  nginx-network:
    driver: bridge